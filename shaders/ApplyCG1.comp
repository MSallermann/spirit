#version 450
#extension GL_KHR_shader_subgroup_arithmetic : enable

layout (local_size_x_id = 1) in;
layout (constant_id = 2) const int sumSubGroupSize = 64;

layout(binding = 0) readonly buffer Data0
{
   float grad [];
};

layout(std430, binding = 1) writeonly buffer PartialSums
{
   float partial_sums[];
};

layout(push_constant) uniform PushConsts
{
  uint pad;
  float dt;
} consts;

shared float sdata[sumSubGroupSize];


void main() {
    float dot = 0.0;

    if ( gl_GlobalInvocationID.x  < 3*consts.pad)
    {	
        dot = grad[gl_GlobalInvocationID.x  ]*grad[(gl_GlobalInvocationID.x  )];
        
    }
    dot = subgroupAdd(dot);

    if (gl_SubgroupInvocationID == 0)
    {
        sdata[gl_SubgroupID] = dot;

    }

    memoryBarrierShared();
    barrier();

    if (gl_SubgroupID == 0)
    {
        dot = gl_SubgroupInvocationID < gl_NumSubgroups ? sdata[gl_SubgroupInvocationID] : 0;
        dot = subgroupAdd(dot);

    }
    if (gl_LocalInvocationID.x == 0)
    {
        partial_sums[gl_WorkGroupID.x] = dot;
    }
}
